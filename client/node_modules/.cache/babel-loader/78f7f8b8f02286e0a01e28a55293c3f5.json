{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/components/functions/functions.js\";\nimport React from \"react\";\nimport Table from \"../table/table\";\nimport Loading from \"../loading/loading\";\nimport { emptyRow, adaptTable, getTableStructure, changeRoleHandler, filterRoleDropdownByUnit, adaptDataToRaw } from \"../../tables/functions\";\nimport { checkIfEditableTable, filterUnitData } from \"../../utils\";\n\nclass Functions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectedRow = {\n      airtableId: null,\n      tabulatorRow: null\n    };\n    this.dataToUpdate = [];\n    this.changeDataToUpdate = this.changeDataToUpdate.bind(this);\n    this.getDataToUpdate = this.getDataToUpdate.bind(this);\n    this.cleanDataToUpdate = this.cleanDataToUpdate.bind(this);\n  }\n\n  getDataToUpdate() {\n    return adaptDataToRaw(this.dataToUpdate, this.props.functions, this.props.units, this.props.roles, this.props.roleUnit);\n  }\n\n  cleanDataToUpdate() {\n    this.dataToUpdate = [];\n  }\n\n  changeDataToUpdate(cell) {\n    const editedData = cell.getData();\n    const indexIfAlreadyExist = this.dataToUpdate.findIndex(value => value.id === editedData.id);\n\n    if (indexIfAlreadyExist > -1) {\n      this.dataToUpdate.splice(indexIfAlreadyExist, 1);\n    }\n\n    this.dataToUpdate.push(editedData);\n  }\n\n  render() {\n    const tableData = filterUnitData(this.props.functions.map(func => adaptTable(func, this.props.functions, this.props.units, this.props.roles, this.props.roleUnit)), this.props.user);\n    const tableStructure = checkIfEditableTable(getTableStructure(this.props.user, this.props.functions, this.props.units, this.props.roles, this.props.roleUnit, this.props.tasks), this.props.user);\n\n    const roleEditHandler = cell => changeRoleHandler(cell, tableData, this.props.functions, this.props.roleUnit, this.props.units, this.dataToUpdate);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }\n    }, this.props.isLoading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    }) : /*#__PURE__*/React.createElement(\"main\", {\n      className: \"page-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-main__wrapper wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      user: this.props.user,\n      tableData: tableData,\n      functionTableData: -1,\n      tableStructure: tableStructure,\n      functionTableStructure: -1,\n      emptyRow: emptyRow,\n      functions: this.props.functions,\n      roleUnit: this.props.roleUnit,\n      units: this.props.units,\n      roles: this.props.roles,\n      cellEditHandlers: [roleEditHandler, this.changeDataToUpdate],\n      filterRoleDropdownByUnit: filterRoleDropdownByUnit,\n      selectedRow: this.selectedRow,\n      layout: \"fitColumns\",\n      tableName: \"Functions\",\n      addRow: this.props.addRow,\n      deleteRow: this.props.deleteRow,\n      updateRows: this.props.updateRows,\n      getDataToUpdate: this.getDataToUpdate,\n      cleanDataToUpdate: this.cleanDataToUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default Functions;","map":{"version":3,"sources":["/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/components/functions/functions.js"],"names":["React","Table","Loading","emptyRow","adaptTable","getTableStructure","changeRoleHandler","filterRoleDropdownByUnit","adaptDataToRaw","checkIfEditableTable","filterUnitData","Functions","Component","constructor","props","selectedRow","airtableId","tabulatorRow","dataToUpdate","changeDataToUpdate","bind","getDataToUpdate","cleanDataToUpdate","functions","units","roles","roleUnit","cell","editedData","getData","indexIfAlreadyExist","findIndex","value","id","splice","push","render","tableData","map","func","user","tableStructure","tasks","roleEditHandler","isLoading","addRow","deleteRow","updateRows"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Table from \"../table/table\";\nimport Loading from \"../loading/loading\";\nimport {\n\temptyRow,\n\tadaptTable,\n\tgetTableStructure,\n\tchangeRoleHandler,\n\tfilterRoleDropdownByUnit,\n\tadaptDataToRaw,\n} from \"../../tables/functions\";\nimport { checkIfEditableTable, filterUnitData } from \"../../utils\";\n\nclass Functions extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selectedRow = {\n\t\t\tairtableId: null,\n\t\t\ttabulatorRow: null,\n\t\t};\n\n\t\tthis.dataToUpdate = [];\n\n\t\tthis.changeDataToUpdate = this.changeDataToUpdate.bind(this);\n\t\tthis.getDataToUpdate = this.getDataToUpdate.bind(this);\n\t\tthis.cleanDataToUpdate = this.cleanDataToUpdate.bind(this);\n\t}\n\n\tgetDataToUpdate() {\n\t\treturn adaptDataToRaw(\n\t\t\tthis.dataToUpdate,\n\t\t\tthis.props.functions,\n\t\t\tthis.props.units,\n\t\t\tthis.props.roles,\n\t\t\tthis.props.roleUnit\n\t\t);\n\t}\n\n\tcleanDataToUpdate() {\n\t\tthis.dataToUpdate = [];\n\t}\n\n\tchangeDataToUpdate(cell) {\n\t\tconst editedData = cell.getData();\n\t\tconst indexIfAlreadyExist = this.dataToUpdate.findIndex(\n\t\t\t(value) => value.id === editedData.id\n\t\t);\n\t\tif (indexIfAlreadyExist > -1) {\n\t\t\tthis.dataToUpdate.splice(indexIfAlreadyExist, 1);\n\t\t}\n\t\tthis.dataToUpdate.push(editedData);\n\t}\n\n\trender() {\n\t\tconst tableData = filterUnitData(\n\t\t\tthis.props.functions.map((func) =>\n\t\t\t\tadaptTable(\n\t\t\t\t\tfunc,\n\t\t\t\t\tthis.props.functions,\n\t\t\t\t\tthis.props.units,\n\t\t\t\t\tthis.props.roles,\n\t\t\t\t\tthis.props.roleUnit\n\t\t\t\t)\n\t\t\t),\n\t\t\tthis.props.user\n\t\t);\n\t\tconst tableStructure = checkIfEditableTable(getTableStructure(this.props.user, this.props.functions, this.props.units, this.props.roles, this.props.roleUnit, this.props.tasks), this.props.user);\n\t\tconst roleEditHandler = (cell) => changeRoleHandler(cell, tableData, this.props.functions, this.props.roleUnit, this.props.units, this.dataToUpdate);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.props.isLoading ? (\n\t\t\t\t\t<Loading />\n\t\t\t\t) : (\n\t\t\t\t\t\t<main className=\"page-main\">\n\t\t\t\t\t\t\t<div className=\"page-main__wrapper wrapper\">\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t\t\t\t\ttableData={tableData}\n\t\t\t\t\t\t\t\t\tfunctionTableData={-1}\n\t\t\t\t\t\t\t\t\ttableStructure={tableStructure}\n\t\t\t\t\t\t\t\t\tfunctionTableStructure={-1}\n\t\t\t\t\t\t\t\t\temptyRow={emptyRow}\n\t\t\t\t\t\t\t\t\tfunctions={this.props.functions}\n\t\t\t\t\t\t\t\t\troleUnit={this.props.roleUnit}\n\t\t\t\t\t\t\t\t\tunits={this.props.units}\n\t\t\t\t\t\t\t\t\troles={this.props.roles}\n\t\t\t\t\t\t\t\t\tcellEditHandlers={[\n\t\t\t\t\t\t\t\t\t\troleEditHandler,\n\t\t\t\t\t\t\t\t\t\tthis.changeDataToUpdate,\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tfilterRoleDropdownByUnit={filterRoleDropdownByUnit}\n\t\t\t\t\t\t\t\t\tselectedRow={this.selectedRow}\n\t\t\t\t\t\t\t\t\tlayout=\"fitColumns\"\n\t\t\t\t\t\t\t\t\ttableName=\"Functions\"\n\t\t\t\t\t\t\t\t\taddRow={this.props.addRow}\n\t\t\t\t\t\t\t\t\tdeleteRow={this.props.deleteRow}\n\t\t\t\t\t\t\t\t\tupdateRows={this.props.updateRows}\n\t\t\t\t\t\t\t\t\tgetDataToUpdate={this.getDataToUpdate}\n\t\t\t\t\t\t\t\t\tcleanDataToUpdate={this.cleanDataToUpdate}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Functions;\n"]},"metadata":{},"sourceType":"module"}