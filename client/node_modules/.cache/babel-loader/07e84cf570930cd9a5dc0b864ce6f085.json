{"ast":null,"code":"import { extend } from \"../../utils.js\";\nconst initialState = {\n  isLoading: true,\n  tasks: [],\n  units: [],\n  functions: [],\n  roleUnit: [],\n  roles: [],\n  reviews: [],\n  okrs: []\n};\nconst actionType = {\n  CHANGE_LOADING: `CHANGE_LOADING`,\n  LOAD_TASKS: `LOAD_TASKS`,\n  LOAD_UNITS: `LOAD_UNITS`,\n  LOAD_FUNCTIONS: `LOAD_FUNCTIONS`,\n  LOAD_ROLE_UNIT: `LOAD_ROLE_UNIT`,\n  LOAD_ROLES: \"LOAD_ROLES\",\n  LOAD_REVIEWS: \"LOAD_REVIEWS\",\n  LOAD_OKRS: \"LOAD_OKRS\"\n};\nconst actionCreator = {\n  loadTasks: tasks => {\n    return {\n      type: actionType.LOAD_TASKS,\n      payload: tasks\n    };\n  },\n  loadOkrs: okrs => {\n    return {\n      type: actionType.LOAD_OKRS,\n      payload: okrs\n    };\n  },\n  loadReviews: reviews => {\n    return {\n      type: actionType.LOAD_REVIEWS,\n      payload: reviews\n    };\n  },\n  loadRoles: roles => {\n    return {\n      type: actionType.LOAD_ROLES,\n      payload: roles\n    };\n  },\n  loadUnits: units => {\n    return {\n      type: actionType.LOAD_UNITS,\n      payload: units\n    };\n  },\n  loadFunctions: functions => {\n    return {\n      type: actionType.LOAD_FUNCTIONS,\n      payload: functions\n    };\n  },\n  loadRoleUnit: roleUnit => {\n    return {\n      type: actionType.LOAD_ROLE_UNIT,\n      payload: roleUnit\n    };\n  },\n  changeLoading: isLoading => {\n    return {\n      type: actionType.CHANGE_LOADING,\n      payload: isLoading\n    };\n  }\n};\nconst Operation = {\n  loadTasks: () => (dispatch, getState, api) => {\n    return api.get(`/airtables/tasks`).then(response => {\n      dispatch(actionCreator.loadTasks(response.data));\n    });\n  },\n  loadReviews: () => (dispatch, getState, api) => {\n    return api.get(`/airtables/reviews`).then(response => {\n      dispatch(actionCreator.loadReviews(response.data));\n    });\n  },\n  loadOkrs: () => (dispatch, getState, api) => {\n    return api.get(`/airtables/okrs`).then(response => {\n      dispatch(actionCreator.loadOkrs(response.data));\n    });\n  },\n  loadRoles: () => (dispatch, getState, api) => {\n    return api.get(`/airtables/roles`).then(response => {\n      dispatch(actionCreator.loadRoles(response.data));\n    });\n  },\n  loadUnits: () => (dispatch, getState, api) => {\n    return api.get(`/airtables/units`).then(response => {\n      dispatch(actionCreator.loadUnits(response.data));\n    });\n  },\n  loadFunctions: () => (dispatch, getState, api) => {\n    return api.get(`/airtables/functions`).then(response => {\n      dispatch(actionCreator.loadFunctions(response.data));\n    });\n  },\n  loadRoleUnit: () => (dispatch, getState, api) => {\n    return api.get(`/airtables/roleunit`).then(response => {\n      dispatch(actionCreator.loadRoleUnit(response.data));\n    });\n  },\n  addRow: table => (dispatch, getState, api) => {\n    return api.post(`/airtables/addrow/${table}`).then(response => {\n      return response;\n    });\n  },\n  deleteRow: (table, id) => (dispatch, getState, api) => {\n    return api.post(`/airtables/deleterow/${table}/${id}`).then(response => {\n      return response;\n    });\n  },\n  updateRows: (table, data) => (dispatch, getState, api) => {\n    return api.put(`/airtables/updateRows/${table}`, {\n      data: data\n    });\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.LOAD_REVIEWS:\n      return extend(state, {\n        reviews: action.payload\n      });\n\n    case actionType.LOAD_OKRS:\n      return extend(state, {\n        okrs: action.payload\n      });\n\n    case actionType.LOAD_TASKS:\n      return extend(state, {\n        tasks: action.payload\n      });\n\n    case actionType.LOAD_UNITS:\n      return extend(state, {\n        units: action.payload\n      });\n\n    case actionType.LOAD_FUNCTIONS:\n      return extend(state, {\n        functions: action.payload\n      });\n\n    case actionType.LOAD_ROLE_UNIT:\n      return extend(state, {\n        roleUnit: action.payload\n      });\n\n    case actionType.CHANGE_LOADING:\n      return extend(state, {\n        isLoading: action.payload\n      });\n\n    case actionType.LOAD_ROLES:\n      return extend(state, {\n        roles: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer, Operation, actionType, actionCreator };","map":{"version":3,"sources":["/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/reducer/data/data.js"],"names":["extend","initialState","isLoading","tasks","units","functions","roleUnit","roles","reviews","okrs","actionType","CHANGE_LOADING","LOAD_TASKS","LOAD_UNITS","LOAD_FUNCTIONS","LOAD_ROLE_UNIT","LOAD_ROLES","LOAD_REVIEWS","LOAD_OKRS","actionCreator","loadTasks","type","payload","loadOkrs","loadReviews","loadRoles","loadUnits","loadFunctions","loadRoleUnit","changeLoading","Operation","dispatch","getState","api","get","then","response","data","addRow","table","post","deleteRow","id","updateRows","put","reducer","state","action"],"mappings":"AAAA,SAASA,MAAT,QAAuB,gBAAvB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,SAAS,EAAE,IADS;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBC,EAAAA,SAAS,EAAE,EAJS;AAKpBC,EAAAA,QAAQ,EAAE,EALU;AAMpBC,EAAAA,KAAK,EAAE,EANa;AAOpBC,EAAAA,OAAO,EAAE,EAPW;AAQjBC,EAAAA,IAAI,EAAE;AARW,CAArB;AAWA,MAAMC,UAAU,GAAG;AAClBC,EAAAA,cAAc,EAAG,gBADC;AAElBC,EAAAA,UAAU,EAAG,YAFK;AAGlBC,EAAAA,UAAU,EAAG,YAHK;AAIlBC,EAAAA,cAAc,EAAG,gBAJC;AAKlBC,EAAAA,cAAc,EAAG,gBALC;AAMlBC,EAAAA,UAAU,EAAE,YANM;AAOlBC,EAAAA,YAAY,EAAE,cAPI;AAQfC,EAAAA,SAAS,EAAE;AARI,CAAnB;AAWA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,SAAS,EAAGjB,KAAD,IAAW;AACrB,WAAO;AACNkB,MAAAA,IAAI,EAAEX,UAAU,CAACE,UADX;AAENU,MAAAA,OAAO,EAAEnB;AAFH,KAAP;AAIA,GANoB;AAOrBoB,EAAAA,QAAQ,EAAGd,IAAD,IAAU;AACnB,WAAO;AACNY,MAAAA,IAAI,EAAEX,UAAU,CAACQ,SADX;AAENI,MAAAA,OAAO,EAAEb;AAFH,KAAP;AAIA,GAZoB;AAcrBe,EAAAA,WAAW,EAAGhB,OAAD,IAAa;AACzB,WAAO;AACNa,MAAAA,IAAI,EAAEX,UAAU,CAACO,YADX;AAENK,MAAAA,OAAO,EAAEd;AAFH,KAAP;AAIA,GAnBoB;AAqBrBiB,EAAAA,SAAS,EAAGlB,KAAD,IAAW;AACrB,WAAO;AACNc,MAAAA,IAAI,EAAEX,UAAU,CAACM,UADX;AAENM,MAAAA,OAAO,EAAEf;AAFH,KAAP;AAIA,GA1BoB;AA4BrBmB,EAAAA,SAAS,EAAGtB,KAAD,IAAW;AACrB,WAAO;AACNiB,MAAAA,IAAI,EAAEX,UAAU,CAACG,UADX;AAENS,MAAAA,OAAO,EAAElB;AAFH,KAAP;AAIA,GAjCoB;AAmCrBuB,EAAAA,aAAa,EAAGtB,SAAD,IAAe;AAC7B,WAAO;AACNgB,MAAAA,IAAI,EAAEX,UAAU,CAACI,cADX;AAENQ,MAAAA,OAAO,EAAEjB;AAFH,KAAP;AAIA,GAxCoB;AA0CrBuB,EAAAA,YAAY,EAAGtB,QAAD,IAAc;AAC3B,WAAO;AACNe,MAAAA,IAAI,EAAEX,UAAU,CAACK,cADX;AAENO,MAAAA,OAAO,EAAEhB;AAFH,KAAP;AAIA,GA/CoB;AAiDrBuB,EAAAA,aAAa,EAAG3B,SAAD,IAAe;AAC7B,WAAO;AACNmB,MAAAA,IAAI,EAAEX,UAAU,CAACC,cADX;AAENW,MAAAA,OAAO,EAAEpB;AAFH,KAAP;AAIA;AAtDoB,CAAtB;AAyDA,MAAM4B,SAAS,GAAG;AACjBV,EAAAA,SAAS,EAAE,MAAM,CAACW,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAC7C,WAAOA,GAAG,CAACC,GAAJ,CAAS,kBAAT,EAA4BC,IAA5B,CAAkCC,QAAD,IAAc;AACrDL,MAAAA,QAAQ,CAACZ,aAAa,CAACC,SAAd,CAAwBgB,QAAQ,CAACC,IAAjC,CAAD,CAAR;AACA,KAFM,CAAP;AAGA,GALgB;AAMjBb,EAAAA,WAAW,EAAE,MAAM,CAACO,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAC/C,WAAOA,GAAG,CAACC,GAAJ,CAAS,oBAAT,EAA8BC,IAA9B,CAAoCC,QAAD,IAAc;AACvDL,MAAAA,QAAQ,CAACZ,aAAa,CAACK,WAAd,CAA0BY,QAAQ,CAACC,IAAnC,CAAD,CAAR;AACA,KAFM,CAAP;AAGA,GAVgB;AAYjBd,EAAAA,QAAQ,EAAE,MAAM,CAACQ,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAC5C,WAAOA,GAAG,CAACC,GAAJ,CAAS,iBAAT,EAA2BC,IAA3B,CAAiCC,QAAD,IAAc;AACpDL,MAAAA,QAAQ,CAACZ,aAAa,CAACI,QAAd,CAAuBa,QAAQ,CAACC,IAAhC,CAAD,CAAR;AACA,KAFM,CAAP;AAGA,GAhBgB;AAkBjBZ,EAAAA,SAAS,EAAE,MAAM,CAACM,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAC7C,WAAOA,GAAG,CAACC,GAAJ,CAAS,kBAAT,EAA4BC,IAA5B,CAAkCC,QAAD,IAAc;AACrDL,MAAAA,QAAQ,CAACZ,aAAa,CAACM,SAAd,CAAwBW,QAAQ,CAACC,IAAjC,CAAD,CAAR;AACA,KAFM,CAAP;AAGA,GAtBgB;AAuBjBX,EAAAA,SAAS,EAAE,MAAM,CAACK,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAC7C,WAAOA,GAAG,CAACC,GAAJ,CAAS,kBAAT,EAA4BC,IAA5B,CAAkCC,QAAD,IAAc;AACrDL,MAAAA,QAAQ,CAACZ,aAAa,CAACO,SAAd,CAAwBU,QAAQ,CAACC,IAAjC,CAAD,CAAR;AACA,KAFM,CAAP;AAGA,GA3BgB;AA4BjBV,EAAAA,aAAa,EAAE,MAAM,CAACI,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AACjD,WAAOA,GAAG,CAACC,GAAJ,CAAS,sBAAT,EAAgCC,IAAhC,CAAsCC,QAAD,IAAc;AACzDL,MAAAA,QAAQ,CAACZ,aAAa,CAACQ,aAAd,CAA4BS,QAAQ,CAACC,IAArC,CAAD,CAAR;AACA,KAFM,CAAP;AAGA,GAhCgB;AAiCjBT,EAAAA,YAAY,EAAE,MAAM,CAACG,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAChD,WAAOA,GAAG,CAACC,GAAJ,CAAS,qBAAT,EAA+BC,IAA/B,CAAqCC,QAAD,IAAc;AACxDL,MAAAA,QAAQ,CAACZ,aAAa,CAACS,YAAd,CAA2BQ,QAAQ,CAACC,IAApC,CAAD,CAAR;AACA,KAFM,CAAP;AAGA,GArCgB;AAuCjBC,EAAAA,MAAM,EAAGC,KAAD,IAAW,CAACR,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AAC/C,WAAOA,GAAG,CAACO,IAAJ,CAAU,qBAAoBD,KAAM,EAApC,EAAuCJ,IAAvC,CAA6CC,QAAD,IAAc;AAChE,aAAOA,QAAP;AACA,KAFM,CAAP;AAGA,GA3CgB;AA6CjBK,EAAAA,SAAS,EAAE,CAACF,KAAD,EAAQG,EAAR,KAAe,CAACX,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AACtD,WAAOA,GAAG,CACRO,IADK,CACC,wBAAuBD,KAAM,IAAGG,EAAG,EADpC,EAELP,IAFK,CAECC,QAAD,IAAc;AACnB,aAAOA,QAAP;AACA,KAJK,CAAP;AAKA,GAnDgB;AAqDjBO,EAAAA,UAAU,EAAE,CAACJ,KAAD,EAAQF,IAAR,KAAiB,CAACN,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA6B;AACzD,WAAOA,GAAG,CAACW,GAAJ,CAAS,yBAAwBL,KAAM,EAAvC,EAA0C;AAChDF,MAAAA,IAAI,EAAEA;AAD0C,KAA1C,CAAP;AAGA;AAzDgB,CAAlB;;AA4DA,MAAMQ,OAAO,GAAG,CAACC,KAAK,GAAG7C,YAAT,EAAuB8C,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAAC1B,IAAf;AACC,SAAKX,UAAU,CAACO,YAAhB;AACC,aAAOjB,MAAM,CAAC8C,KAAD,EAAQ;AAAEtC,QAAAA,OAAO,EAAEuC,MAAM,CAACzB;AAAlB,OAAR,CAAb;;AACD,SAAKZ,UAAU,CAACQ,SAAhB;AACC,aAAOlB,MAAM,CAAC8C,KAAD,EAAQ;AAAErC,QAAAA,IAAI,EAAEsC,MAAM,CAACzB;AAAf,OAAR,CAAb;;AACD,SAAKZ,UAAU,CAACE,UAAhB;AACC,aAAOZ,MAAM,CAAC8C,KAAD,EAAQ;AAAE3C,QAAAA,KAAK,EAAE4C,MAAM,CAACzB;AAAhB,OAAR,CAAb;;AACD,SAAKZ,UAAU,CAACG,UAAhB;AACC,aAAOb,MAAM,CAAC8C,KAAD,EAAQ;AAAE1C,QAAAA,KAAK,EAAE2C,MAAM,CAACzB;AAAhB,OAAR,CAAb;;AACD,SAAKZ,UAAU,CAACI,cAAhB;AACC,aAAOd,MAAM,CAAC8C,KAAD,EAAQ;AAAEzC,QAAAA,SAAS,EAAE0C,MAAM,CAACzB;AAApB,OAAR,CAAb;;AACD,SAAKZ,UAAU,CAACK,cAAhB;AACC,aAAOf,MAAM,CAAC8C,KAAD,EAAQ;AAAExC,QAAAA,QAAQ,EAAEyC,MAAM,CAACzB;AAAnB,OAAR,CAAb;;AACD,SAAKZ,UAAU,CAACC,cAAhB;AACC,aAAOX,MAAM,CAAC8C,KAAD,EAAQ;AAAE5C,QAAAA,SAAS,EAAE6C,MAAM,CAACzB;AAApB,OAAR,CAAb;;AACD,SAAKZ,UAAU,CAACM,UAAhB;AACC,aAAOhB,MAAM,CAAC8C,KAAD,EAAQ;AAAEvC,QAAAA,KAAK,EAAEwC,MAAM,CAACzB;AAAhB,OAAR,CAAb;;AACD;AACC,aAAOwB,KAAP;AAlBF;AAoBA,CArBD;;AAuBA,SAASD,OAAT,EAAkBf,SAAlB,EAA6BpB,UAA7B,EAAyCS,aAAzC","sourcesContent":["import { extend } from \"../../utils.js\";\n\nconst initialState = {\n\tisLoading: true,\n\ttasks: [],\n\tunits: [],\n\tfunctions: [],\n\troleUnit: [],\n\troles: [],\n\treviews: [],\n    okrs: []\n};\n\nconst actionType = {\n\tCHANGE_LOADING: `CHANGE_LOADING`,\n\tLOAD_TASKS: `LOAD_TASKS`,\n\tLOAD_UNITS: `LOAD_UNITS`,\n\tLOAD_FUNCTIONS: `LOAD_FUNCTIONS`,\n\tLOAD_ROLE_UNIT: `LOAD_ROLE_UNIT`,\n\tLOAD_ROLES: \"LOAD_ROLES\",\n\tLOAD_REVIEWS: \"LOAD_REVIEWS\",\n    LOAD_OKRS: \"LOAD_OKRS\"\n};\n\nconst actionCreator = {\n\tloadTasks: (tasks) => {\n\t\treturn {\n\t\t\ttype: actionType.LOAD_TASKS,\n\t\t\tpayload: tasks,\n\t\t};\n\t},\n\tloadOkrs: (okrs) => {\n\t\treturn {\n\t\t\ttype: actionType.LOAD_OKRS,\n\t\t\tpayload: okrs,\n\t\t};\n\t},\n\n\tloadReviews: (reviews) => {\n\t\treturn {\n\t\t\ttype: actionType.LOAD_REVIEWS,\n\t\t\tpayload: reviews,\n\t\t};\n\t},\n\n\tloadRoles: (roles) => {\n\t\treturn {\n\t\t\ttype: actionType.LOAD_ROLES,\n\t\t\tpayload: roles,\n\t\t};\n\t},\n\n\tloadUnits: (units) => {\n\t\treturn {\n\t\t\ttype: actionType.LOAD_UNITS,\n\t\t\tpayload: units,\n\t\t};\n\t},\n\n\tloadFunctions: (functions) => {\n\t\treturn {\n\t\t\ttype: actionType.LOAD_FUNCTIONS,\n\t\t\tpayload: functions,\n\t\t};\n\t},\n\n\tloadRoleUnit: (roleUnit) => {\n\t\treturn {\n\t\t\ttype: actionType.LOAD_ROLE_UNIT,\n\t\t\tpayload: roleUnit,\n\t\t};\n\t},\n\n\tchangeLoading: (isLoading) => {\n\t\treturn {\n\t\t\ttype: actionType.CHANGE_LOADING,\n\t\t\tpayload: isLoading,\n\t\t};\n\t},\n};\n\nconst Operation = {\n\tloadTasks: () => (dispatch, getState, api) => {\n\t\treturn api.get(`/airtables/tasks`).then((response) => {\n\t\t\tdispatch(actionCreator.loadTasks(response.data));\n\t\t});\n\t},\n\tloadReviews: () => (dispatch, getState, api) => {\n\t\treturn api.get(`/airtables/reviews`).then((response) => {\n\t\t\tdispatch(actionCreator.loadReviews(response.data));\n\t\t});\n\t},\n\n\tloadOkrs: () => (dispatch, getState, api) => {\n\t\treturn api.get(`/airtables/okrs`).then((response) => {\n\t\t\tdispatch(actionCreator.loadOkrs(response.data));\n\t\t});\n\t},\n\n\tloadRoles: () => (dispatch, getState, api) => {\n\t\treturn api.get(`/airtables/roles`).then((response) => {\n\t\t\tdispatch(actionCreator.loadRoles(response.data));\n\t\t});\n\t},\n\tloadUnits: () => (dispatch, getState, api) => {\n\t\treturn api.get(`/airtables/units`).then((response) => {\n\t\t\tdispatch(actionCreator.loadUnits(response.data));\n\t\t});\n\t},\n\tloadFunctions: () => (dispatch, getState, api) => {\n\t\treturn api.get(`/airtables/functions`).then((response) => {\n\t\t\tdispatch(actionCreator.loadFunctions(response.data));\n\t\t});\n\t},\n\tloadRoleUnit: () => (dispatch, getState, api) => {\n\t\treturn api.get(`/airtables/roleunit`).then((response) => {\n\t\t\tdispatch(actionCreator.loadRoleUnit(response.data));\n\t\t});\n\t},\n\n\taddRow: (table) => (dispatch, getState, api) => {\n\t\treturn api.post(`/airtables/addrow/${table}`).then((response) => {\n\t\t\treturn response;\n\t\t});\n\t},\n\n\tdeleteRow: (table, id) => (dispatch, getState, api) => {\n\t\treturn api\n\t\t\t.post(`/airtables/deleterow/${table}/${id}`)\n\t\t\t.then((response) => {\n\t\t\t\treturn response;\n\t\t\t});\n\t},\n\n\tupdateRows: (table, data) => (dispatch, getState, api) => {\n\t\treturn api.put(`/airtables/updateRows/${table}`, {\n\t\t\tdata: data,\n\t\t});\n\t},\n};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase actionType.LOAD_REVIEWS:\n\t\t\treturn extend(state, { reviews: action.payload });\n\t\tcase actionType.LOAD_OKRS:\n\t\t\treturn extend(state, { okrs: action.payload });\n\t\tcase actionType.LOAD_TASKS:\n\t\t\treturn extend(state, { tasks: action.payload });\n\t\tcase actionType.LOAD_UNITS:\n\t\t\treturn extend(state, { units: action.payload });\n\t\tcase actionType.LOAD_FUNCTIONS:\n\t\t\treturn extend(state, { functions: action.payload });\n\t\tcase actionType.LOAD_ROLE_UNIT:\n\t\t\treturn extend(state, { roleUnit: action.payload });\n\t\tcase actionType.CHANGE_LOADING:\n\t\t\treturn extend(state, { isLoading: action.payload });\n\t\tcase actionType.LOAD_ROLES:\n\t\t\treturn extend(state, { roles: action.payload });\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport { reducer, Operation, actionType, actionCreator };\n"]},"metadata":{},"sourceType":"module"}