{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/components/checkListForm/checkListForm.js\";\nimport React from \"react\";\nimport \"./checkListForm.scss\";\n\nclass CheckListForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const date_today = new Date().toLocaleString().split(\",\")[0];\n    const date_tomorrow = new Date(new Date().setDate(new Date().getDate() - 1)).toLocaleString().split(\",\")[0];\n    const {\n      showPopup,\n      isTasksPopup\n    } = this.props;\n    const rows = this.props.tasks.map((task, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: task + index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, task), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      autocomplete: \"off\",\n      type: \"text\",\n      name: \"name\",\n      className: \"inputArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      autocomplete: \"off\",\n      type: \"text\",\n      name: \"name\",\n      className: \"inputArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"inputArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"No\"))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"inputArea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"No\")))));\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"checklist-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"checklist-form__form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checklist-form__controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"btnSend\",\n      className: \"btn\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: evt => {\n        showPopup(!isTasksPopup);\n      },\n      className: \"checklist-form__close-btn\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"Time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, \"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F \", date_today), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, \"\\u0412\\u0447\\u0435\\u0440\\u0430 \", date_tomorrow))), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"simple-little-table\",\n      cellSpacing: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \"Task\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"Frequency/day\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Time Consumed per 1 freq\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, \"Should be revised? (Yes / No)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \"Other person does it? (Yes No)\")), rows)));\n  }\n\n}\n\nexport default CheckListForm;","map":{"version":3,"sources":["/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/components/checkListForm/checkListForm.js"],"names":["React","CheckListForm","Component","constructor","props","render","date_today","Date","toLocaleString","split","date_tomorrow","setDate","getDate","showPopup","isTasksPopup","rows","tasks","map","task","index","evt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./checkListForm.scss\";\n\nclass CheckListForm extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const date_today = new Date().toLocaleString().split(\",\")[0];\n        const date_tomorrow = new Date(\n            new Date().setDate(new Date().getDate() - 1)\n        )\n            .toLocaleString()\n            .split(\",\")[0];\n        const { showPopup, isTasksPopup } = this.props;\n        const rows = this.props.tasks.map((task, index) => (\n            <tr key={task + index}>\n                <td>{task}</td>\n                <td>\n                    <input\n                        autocomplete=\"off\"\n                        type=\"text\"\n                        name=\"name\"\n                        className={\"inputArea\"}\n                    />\n                </td>\n                <td>\n                    <input\n                        autocomplete=\"off\"\n                        type=\"text\"\n                        name=\"name\"\n                        className={\"inputArea\"}\n                    />\n                </td>\n                <td>\n                    <select className={\"inputArea\"}>\n                        <option>Yes</option>\n                        <option>No</option>\n                    </select>\n                </td>\n                <td>\n                    <select className={\"inputArea\"}>\n                        <option>Yes</option>\n                        <option>No</option>\n                    </select>\n                </td>\n            </tr>\n        ));\n        return (\n            <section className=\"checklist-form\">\n                <form className=\"checklist-form__form\">\n                    <div className=\"checklist-form__controls\">\n                        <button id=\"btnSend\" className=\"btn\" type=\"button\">\n                            Отправить\n                        </button>\n                        <button\n                            onClick={(evt) => {\n                                showPopup(!isTasksPopup);\n                            }}\n                            className=\"checklist-form__close-btn\"\n                            type=\"button\"\n                        >\n                            X\n                        </button>\n                        <select id={\"Time\"}>\n                            <option>Сегодня {date_today}</option>\n                            <option>Вчера {date_tomorrow}</option>\n                        </select>\n                    </div>\n                    <table className=\"simple-little-table\" cellSpacing=\"0\">\n                        <tr>\n                            <th>Task</th>\n                            <th>Frequency/day</th>\n                            <th>Time Consumed per 1 freq</th>\n                            <th>Should be revised? (Yes / No)</th>\n                            <th>Other person does it? (Yes No)</th>\n                        </tr>\n                        {rows}\n                    </table>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default CheckListForm;\n"]},"metadata":{},"sourceType":"module"}