{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/components/table/table.js\";\nimport React from \"react\";\nimport \"react-tabulator/lib/styles.css\";\nimport Tabulator from \"tabulator-tables\"; //import Tabulator library\n\nimport \"tabulator-tables/dist/css/tabulator.min.css\"; //import Tabulator stylesheet\n\nimport \"./table.scss\";\nimport Filters from \"../filters/filters\";\nimport Controls from \"../controls/controls\";\nimport { filterDropdownMenus } from \"../../utils\";\nexport let RolesList = [];\n\nclass Table extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.generateFiltersObject = () => {\n      if (this.state.filterUnits === \"All\" && this.state.filterRoles === \"All\") {\n        return \"\";\n      }\n\n      if (this.state.filterUnits === \"All\" && this.state.filterRoles !== \"All\") {\n        return [{\n          field: \"role\",\n          type: \"=\",\n          value: this.state.filterRoles\n        }];\n      } else if (this.state.filterUnits !== \"All\" && this.state.filterRoles === \"All\") {\n        return [{\n          field: \"unit\",\n          type: \"=\",\n          value: this.state.filterUnits\n        }];\n      } else {\n        return [{\n          field: \"role\",\n          type: \"=\",\n          value: this.state.filterRoles\n        }, {\n          field: \"unit\",\n          type: \"=\",\n          value: this.state.filterUnits\n        }];\n      }\n    };\n\n    this.tableRef = React.createRef();\n    this.table = null;\n    this.state = {\n      filterUnits: this.props.user.rights === \"Regular\" || this.props.user.rights === \"Unit Lead\" ? this.props.user.unit : \"All\",\n      filterRoles: this.props.user.rights === \"Regular\" ? this.props.user.role : \"All\"\n    };\n    this.setFilterUnits = this.setFilterUnits.bind(this);\n    this.setFilterRoles = this.setFilterRoles.bind(this);\n    this.rowClickHandler = this.rowClickHandler.bind(this);\n  }\n\n  setFilterUnits(filter) {\n    this.setState({\n      filterUnits: filter\n    });\n  }\n\n  setFilterRoles(filter) {\n    this.setState({\n      filterRoles: filter\n    });\n  }\n\n  makeRolesListBasedOnUnits() {\n    const unitFilter = this.state.filterUnits;\n\n    if (unitFilter === \"All\") {\n      return this.props.roles.map(role => {\n        if (role.fields.Role) {\n          return role.fields.Role;\n        }\n\n        return \"\";\n      }).filter((value, index, self) => {\n        return self.indexOf(value) === index;\n      });\n    } else {\n      let ret = [];\n      let j = 0;\n\n      for (let i = 0; i < this.props.tableData.length; ++i) {\n        if (this.props.tableData[i].role && this.props.tableData[i].unit === unitFilter) {\n          ret[j] = this.props.tableData[i].role;\n          ++j;\n        }\n      }\n\n      return Array.from(new Set(ret));\n    }\n  }\n\n  rowClickHandler(e, row) {\n    if (row === this.props.selectedRow.tabulatorRow) {\n      row.deselect();\n      this.props.selectedRow.tabulatorRow = null;\n      this.props.selectedRow.airtableId = null;\n      return;\n    }\n\n    this.props.selectedRow.tabulatorRow = row;\n    this.props.selectedRow.airtableId = row.getData().id;\n  }\n\n  updateData() {\n    this.props.updateRows(this.props.tableName, this.props.getDataToUpdate()).then(() => {\n      this.props.cleanDataToUpdate();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    this.table = new Tabulator(this.tableRef, {\n      data: this.props.tableData,\n      reactiveData: true,\n      columns: this.props.tableStructure,\n      //define table columns\n      maxHeight: \"100%\",\n      cellEdited: cell => {\n        this.props.cellEditHandlers.forEach(handler => {\n          handler(cell);\n        });\n        this.updateData();\n      },\n      rowClick: this.rowClickHandler,\n      rowMoved: row => {\n        this.props.rowMovedHandler(row);\n        this.updateData();\n      },\n      selectable: 1,\n      movableRows: this.props.movable,\n      groupBy: this.props.groupBy,\n      groupValues: this.props.groupValues,\n      layout: this.props.layout\n    });\n\n    if (this.props.tableName === \"Tasks\") {\n      this.initDefinition = this.table.columnManager.columnsByField.roleAndFunc.definition.editorParams.values;\n    } else if (this.props.tableName === \"Functions\") {\n      this.initDefinition = this.table.columnManager.columnsByField.role.definition.editorParams.values;\n    }\n\n    const unitFilter = this.state.filterUnits;\n\n    if (unitFilter !== \"All\") {\n      filterDropdownMenus(this.props, this.state.filterUnits, this.table, this.generateFiltersObject);\n    }\n  }\n\n  componentDidUpdate() {\n    const unitFilter = this.state.filterUnits; //console.log(this.generateFiltersObject());\n\n    this.table.setFilter(this.generateFiltersObject());\n\n    if (unitFilter !== \"All\") {\n      filterDropdownMenus(this.props, this.state.filterUnits, this.table, this.generateFiltersObject);\n    } else {\n      if (this.props.tableName === \"Tasks\") {\n        this.table.updateColumnDefinition(\"roleAndFunc\", {\n          editorParams: {\n            values: this.initDefinition\n          }\n        });\n      } else if (this.props.tableName === \"Functions\") {\n        this.table.updateColumnDefinition(\"role\", {\n          editorParams: {\n            values: this.initDefinition\n          }\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"page-main__controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Filters, {\n      user: this.props.user,\n      tableData: this.props.tableData,\n      units: this.props.units,\n      roles: this.props.roles,\n      setFilterUnits: this.setFilterUnits,\n      setFilterRoles: this.setFilterRoles,\n      rolesBasedOnUnits: this.makeRolesListBasedOnUnits(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Controls, {\n      tableData: this.props.tableData,\n      tableName: this.props.tableName,\n      addRow: this.props.addRow,\n      deleteRow: this.props.deleteRow,\n      updateRows: this.props.updateRows,\n      emptyRow: this.props.emptyRow,\n      selectedRow: this.props.selectedRow,\n      getDataToUpdate: this.props.getDataToUpdate,\n      cleanDataToUpdate: this.props.cleanDataToUpdate,\n      user: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.tableRef = el,\n      id: \"tbl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/components/table/table.js"],"names":["React","Tabulator","Filters","Controls","filterDropdownMenus","RolesList","Table","PureComponent","constructor","props","generateFiltersObject","state","filterUnits","filterRoles","field","type","value","tableRef","createRef","table","user","rights","unit","role","setFilterUnits","bind","setFilterRoles","rowClickHandler","filter","setState","makeRolesListBasedOnUnits","unitFilter","roles","map","fields","Role","index","self","indexOf","ret","j","i","tableData","length","Array","from","Set","e","row","selectedRow","tabulatorRow","deselect","airtableId","getData","id","updateData","updateRows","tableName","getDataToUpdate","then","cleanDataToUpdate","catch","err","console","log","componentDidMount","data","reactiveData","columns","tableStructure","maxHeight","cellEdited","cell","cellEditHandlers","forEach","handler","rowClick","rowMoved","rowMovedHandler","selectable","movableRows","movable","groupBy","groupValues","layout","initDefinition","columnManager","columnsByField","roleAndFunc","definition","editorParams","values","componentDidUpdate","setFilter","updateColumnDefinition","render","units","addRow","deleteRow","emptyRow","el"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"react-tabulator/lib/styles.css\";\nimport Tabulator from \"tabulator-tables\"; //import Tabulator library\nimport \"tabulator-tables/dist/css/tabulator.min.css\"; //import Tabulator stylesheet\nimport \"./table.scss\";\nimport Filters from \"../filters/filters\";\nimport Controls from \"../controls/controls\";\nimport { filterDropdownMenus } from \"../../utils\";\n\nexport let RolesList = [];\nclass Table extends React.PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.tableRef = React.createRef();\n\t\tthis.table = null;\n\n\t\tthis.state = {\n\t\t\tfilterUnits:\n\t\t\t\tthis.props.user.rights === \"Regular\" ||\n\t\t\t\t\tthis.props.user.rights === \"Unit Lead\"\n\t\t\t\t\t? this.props.user.unit\n\t\t\t\t\t: \"All\",\n\t\t\tfilterRoles:\n\t\t\t\tthis.props.user.rights === \"Regular\"\n\t\t\t\t\t? this.props.user.role\n\t\t\t\t\t: \"All\",\n\t\t};\n\n\t\tthis.setFilterUnits = this.setFilterUnits.bind(this);\n\t\tthis.setFilterRoles = this.setFilterRoles.bind(this);\n\n\t\tthis.rowClickHandler = this.rowClickHandler.bind(this);\n\t}\n\n\tsetFilterUnits(filter) {\n\t\tthis.setState({\n\t\t\tfilterUnits: filter,\n\t\t});\n\t}\n\n\tsetFilterRoles(filter) {\n\t\tthis.setState({\n\t\t\tfilterRoles: filter,\n\t\t});\n\t}\n\n\tgenerateFiltersObject = () => {\n\t\tif (\n\t\t\tthis.state.filterUnits === \"All\" &&\n\t\t\tthis.state.filterRoles === \"All\"\n\t\t) {\n\t\t\treturn \"\";\n\t\t}\n\t\tif (\n\t\t\tthis.state.filterUnits === \"All\" &&\n\t\t\tthis.state.filterRoles !== \"All\"\n\t\t) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tfield: \"role\",\n\t\t\t\t\ttype: \"=\",\n\t\t\t\t\tvalue: this.state.filterRoles,\n\t\t\t\t},\n\t\t\t];\n\t\t} else if (\n\t\t\tthis.state.filterUnits !== \"All\" &&\n\t\t\tthis.state.filterRoles === \"All\"\n\t\t) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tfield: \"unit\",\n\t\t\t\t\ttype: \"=\",\n\t\t\t\t\tvalue: this.state.filterUnits,\n\t\t\t\t},\n\t\t\t];\n\t\t} else {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tfield: \"role\",\n\t\t\t\t\ttype: \"=\",\n\t\t\t\t\tvalue: this.state.filterRoles,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"unit\",\n\t\t\t\t\ttype: \"=\",\n\t\t\t\t\tvalue: this.state.filterUnits,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t};\n\n\tmakeRolesListBasedOnUnits() {\n\t\tconst unitFilter = this.state.filterUnits;\n\n\t\tif (unitFilter === \"All\") {\n\t\t\treturn this.props.roles\n\t\t\t\t.map((role) => {\n\t\t\t\t\tif (role.fields.Role) {\n\t\t\t\t\t\treturn role.fields.Role;\n\t\t\t\t\t}\n\t\t\t\t\treturn \"\";\n\t\t\t\t})\n\t\t\t\t.filter((value, index, self) => {\n\t\t\t\t\treturn self.indexOf(value) === index;\n\t\t\t\t});\n\t\t} else {\n\t\t\tlet ret = [];\n\t\t\tlet j = 0;\n\t\t\tfor (let i = 0; i < this.props.tableData.length; ++i) {\n\t\t\t\tif (\n\t\t\t\t\tthis.props.tableData[i].role &&\n\t\t\t\t\tthis.props.tableData[i].unit === unitFilter\n\t\t\t\t) {\n\t\t\t\t\tret[j] = this.props.tableData[i].role;\n\t\t\t\t\t++j;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Array.from(new Set(ret));\n\t\t}\n\t}\n\n\trowClickHandler(e, row) {\n\t\tif (row === this.props.selectedRow.tabulatorRow) {\n\t\t\trow.deselect();\n\t\t\tthis.props.selectedRow.tabulatorRow = null;\n\t\t\tthis.props.selectedRow.airtableId = null;\n\t\t\treturn;\n\t\t}\n\t\tthis.props.selectedRow.tabulatorRow = row;\n\t\tthis.props.selectedRow.airtableId = row.getData().id;\n\t}\n\n\tupdateData() {\n\t\tthis.props\n\t\t\t.updateRows(this.props.tableName, this.props.getDataToUpdate())\n\t\t\t.then(() => {\n\t\t\t\tthis.props.cleanDataToUpdate();\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.table = new Tabulator(this.tableRef, {\n\t\t\tdata: this.props.tableData,\n\t\t\treactiveData: true,\n\t\t\tcolumns: this.props.tableStructure, //define table columns\n\t\t\tmaxHeight: \"100%\",\n\t\t\tcellEdited: (cell) => {\n\t\t\t\tthis.props.cellEditHandlers.forEach((handler) => {\n\t\t\t\t\thandler(cell);\n\t\t\t\t});\n\t\t\t\tthis.updateData();\n\t\t\t},\n\t\t\trowClick: this.rowClickHandler,\n\t\t\trowMoved: (row) => {\n\t\t\t\tthis.props.rowMovedHandler(row);\n\t\t\t\tthis.updateData();\n\t\t\t},\n\t\t\tselectable: 1,\n\t\t\tmovableRows: this.props.movable,\n\t\t\tgroupBy: this.props.groupBy,\n\t\t\tgroupValues: this.props.groupValues,\n\t\t\tlayout: this.props.layout,\n\t\t});\n\n\t\tif (this.props.tableName === \"Tasks\") {\n\t\t\tthis.initDefinition = this.table.columnManager.columnsByField.roleAndFunc.definition.editorParams.values;\n\t\t} else if (this.props.tableName === \"Functions\") {\n\t\t\tthis.initDefinition = this.table.columnManager.columnsByField.role.definition.editorParams.values;\n\t\t}\n\n\t\tconst unitFilter = this.state.filterUnits;\n\t\tif (unitFilter !== \"All\") {\n\t\t\tfilterDropdownMenus(\n\t\t\t\tthis.props,\n\t\t\t\tthis.state.filterUnits,\n\t\t\t\tthis.table,\n\t\t\t\tthis.generateFiltersObject\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconst unitFilter = this.state.filterUnits;\n\t\t//console.log(this.generateFiltersObject());\n\t\tthis.table.setFilter(this.generateFiltersObject());\n\t\tif (unitFilter !== \"All\") {\n\t\t\tfilterDropdownMenus(\n\t\t\t\tthis.props,\n\t\t\t\tthis.state.filterUnits,\n\t\t\t\tthis.table,\n\t\t\t\tthis.generateFiltersObject\n\t\t\t);\n\t\t} else {\n\t\t\tif (this.props.tableName === \"Tasks\") {\n\t\t\t\tthis.table.updateColumnDefinition(\"roleAndFunc\", {\n\t\t\t\t\teditorParams: { values: this.initDefinition },\n\t\t\t\t});\n\t\t\t} else if (this.props.tableName === \"Functions\") {\n\t\t\t\tthis.table.updateColumnDefinition(\"role\", {\n\t\t\t\t\teditorParams: { values: this.initDefinition },\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<section className=\"page-main__controls\">\n\t\t\t\t\t<Filters\n\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t\ttableData={this.props.tableData}\n\t\t\t\t\t\tunits={this.props.units}\n\t\t\t\t\t\troles={this.props.roles}\n\t\t\t\t\t\tsetFilterUnits={this.setFilterUnits}\n\t\t\t\t\t\tsetFilterRoles={this.setFilterRoles}\n\t\t\t\t\t\trolesBasedOnUnits={this.makeRolesListBasedOnUnits()}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Controls\n\t\t\t\t\t\ttableData={this.props.tableData}\n\t\t\t\t\t\ttableName={this.props.tableName}\n\t\t\t\t\t\taddRow={this.props.addRow}\n\t\t\t\t\t\tdeleteRow={this.props.deleteRow}\n\t\t\t\t\t\tupdateRows={this.props.updateRows}\n\t\t\t\t\t\temptyRow={this.props.emptyRow}\n\t\t\t\t\t\tselectedRow={this.props.selectedRow}\n\t\t\t\t\t\tgetDataToUpdate={this.props.getDataToUpdate}\n\t\t\t\t\t\tcleanDataToUpdate={this.props.cleanDataToUpdate}\n\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\n\t\t\t\t<div className=\"table\">\n\t\t\t\t\t<div ref={(el) => (this.tableRef = el)} id=\"tbl\"></div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}