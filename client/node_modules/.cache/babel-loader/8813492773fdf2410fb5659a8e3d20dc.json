{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/components/tasks/tasks.js\";\nimport React from 'react';\nimport Table from \"../table/table\";\nimport Loading from \"../loading/loading\";\nimport { emptyRow, adaptTable, getTableStructure, changeRoleAndFunctionHandler, changeTimeRequired, adaptDataToRaw, filterRoleAndFuncDropdownByUnit } from \"../../tables/tasks\";\nimport { checkIfEditableTable, filterUnitData } from \"../../utils\"; //---------------------- changes -------------\n\nimport { adaptTable as functionAdaptTable, getTableStructure as functionGetTableStructure } from \"../../tables/functions\"; //-------------------------------------------\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectedRow = {\n      airtableId: null,\n      tabulatorRow: null\n    };\n    this.dataToUpdate = [];\n    this.changeDataToUpdate = this.changeDataToUpdate.bind(this);\n    this.getDataToUpdate = this.getDataToUpdate.bind(this);\n    this.cleanDataToUpdate = this.cleanDataToUpdate.bind(this);\n  }\n\n  getDataToUpdate() {\n    return adaptDataToRaw(this.dataToUpdate, this.props.functions);\n  }\n\n  cleanDataToUpdate() {\n    this.dataToUpdate = [];\n  }\n\n  changeDataToUpdate(cell) {\n    const editedData = cell.getData();\n    const indexIfAlreadyExist = this.dataToUpdate.findIndex(value => value.id === editedData.id);\n\n    if (indexIfAlreadyExist > -1) {\n      this.dataToUpdate.splice(indexIfAlreadyExist, 1);\n    }\n\n    this.dataToUpdate.push(editedData);\n  }\n\n  render() {\n    const tableData = filterUnitData(this.props.tasks.map(task => adaptTable(task, this.props.units, this.props.functions, this.props.roleUnit)), this.props.user);\n    const functionTableData = filterUnitData(this.props.functions.map(func => functionAdaptTable(func, this.props.units, this.props.functions, this.props.roleUnit)), this.props.user);\n    const tableStructure = checkIfEditableTable(getTableStructure(this.props.functions), this.props.user);\n    const functionTableStructure = checkIfEditableTable(functionGetTableStructure(this.props.functions), this.props.user);\n\n    const roleAndFuncEditHandler = cell => changeRoleAndFunctionHandler(cell, tableData, this.props.functions, this.props.roleUnit, this.props.units);\n\n    const timeRequiredHandler = cell => changeTimeRequired(cell, tableData, this.props.functions);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }\n    }, this.props.isLoading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }\n    }) : /*#__PURE__*/React.createElement(\"main\", {\n      className: \"page-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-main__wrapper wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      user: this.props.user,\n      tableData: tableData,\n      functionTableData: functionTableData,\n      tableStructure: tableStructure,\n      functionTableStructure: functionTableStructure,\n      emptyRow: emptyRow,\n      functions: this.props.functions,\n      roleUnit: this.props.roleUnit,\n      units: this.props.units,\n      roles: this.props.roles,\n      cellEditHandlers: [roleAndFuncEditHandler, this.changeDataToUpdate, timeRequiredHandler],\n      selectedRow: this.selectedRow,\n      filterRoleAndFuncDropdownByUnit: filterRoleAndFuncDropdownByUnit,\n      tableName: \"Tasks\",\n      addRow: this.props.addRow,\n      deleteRow: this.props.deleteRow,\n      updateRows: this.props.updateRows,\n      getDataToUpdate: this.getDataToUpdate,\n      cleanDataToUpdate: this.cleanDataToUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }\n    }))));\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/components/tasks/tasks.js"],"names":["React","Table","Loading","emptyRow","adaptTable","getTableStructure","changeRoleAndFunctionHandler","changeTimeRequired","adaptDataToRaw","filterRoleAndFuncDropdownByUnit","checkIfEditableTable","filterUnitData","functionAdaptTable","functionGetTableStructure","Tasks","Component","constructor","props","selectedRow","airtableId","tabulatorRow","dataToUpdate","changeDataToUpdate","bind","getDataToUpdate","cleanDataToUpdate","functions","cell","editedData","getData","indexIfAlreadyExist","findIndex","value","id","splice","push","render","tableData","tasks","map","task","units","roleUnit","user","functionTableData","func","tableStructure","functionTableStructure","roleAndFuncEditHandler","timeRequiredHandler","isLoading","roles","addRow","deleteRow","updateRows"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from \"../table/table\";\nimport Loading from \"../loading/loading\";\nimport { emptyRow, adaptTable, getTableStructure, changeRoleAndFunctionHandler, changeTimeRequired, adaptDataToRaw, filterRoleAndFuncDropdownByUnit } from \"../../tables/tasks\";\nimport { checkIfEditableTable, filterUnitData } from \"../../utils\";\n\n\n//---------------------- changes -------------\nimport { adaptTable as functionAdaptTable, getTableStructure as functionGetTableStructure } from \"../../tables/functions\";\n\n//-------------------------------------------\nclass Tasks extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selectedRow = {\n\t\t\tairtableId: null,\n\t\t\ttabulatorRow: null\n\t\t}\n\n\t\tthis.dataToUpdate = [];\n\n\n\t\tthis.changeDataToUpdate = this.changeDataToUpdate.bind(this);\n\t\tthis.getDataToUpdate = this.getDataToUpdate.bind(this);\n\t\tthis.cleanDataToUpdate = this.cleanDataToUpdate.bind(this);\n\t}\n\n\n\tgetDataToUpdate() {\n\t\treturn adaptDataToRaw(this.dataToUpdate, this.props.functions);\n\t}\n\n\tcleanDataToUpdate() {\n\t\tthis.dataToUpdate = [];\n\t}\n\n\tchangeDataToUpdate(cell) {\n\t\tconst editedData = cell.getData();\n\t\tconst indexIfAlreadyExist = this.dataToUpdate.findIndex((value) => value.id === editedData.id);\n\t\tif (indexIfAlreadyExist > -1) {\n\t\t\tthis.dataToUpdate.splice(indexIfAlreadyExist, 1);\n\t\t}\n\t\tthis.dataToUpdate.push(editedData);\n\t}\n\n\trender() {\n\t\tconst tableData = filterUnitData(this.props.tasks.map((task) => adaptTable(task, this.props.units, this.props.functions, this.props.roleUnit)), this.props.user);\n\t\tconst functionTableData = filterUnitData(this.props.functions.map((func) => functionAdaptTable(func, this.props.units, this.props.functions, this.props.roleUnit)), this.props.user);\n\t\tconst tableStructure = checkIfEditableTable(getTableStructure(this.props.functions), this.props.user);\n\t\tconst functionTableStructure = checkIfEditableTable(functionGetTableStructure(this.props.functions), this.props.user);\n\t\tconst roleAndFuncEditHandler = (cell) => changeRoleAndFunctionHandler(cell, tableData, this.props.functions, this.props.roleUnit, this.props.units)\n\t\tconst timeRequiredHandler = (cell) => changeTimeRequired(cell, tableData, this.props.functions);\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.props.isLoading\n\t\t\t\t\t? <Loading />\n\t\t\t\t\t: <main className=\"page-main\">\n\t\t\t\t\t\t<div className=\"page-main__wrapper wrapper\">\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t\t\t\ttableData={tableData}\n\t\t\t\t\t\t\t\tfunctionTableData={functionTableData}\n\t\t\t\t\t\t\t\ttableStructure={tableStructure}\n\t\t\t\t\t\t\t\tfunctionTableStructure={functionTableStructure}\n\t\t\t\t\t\t\t\temptyRow={emptyRow}\n\t\t\t\t\t\t\t\tfunctions={this.props.functions}\n\t\t\t\t\t\t\t\troleUnit={this.props.roleUnit}\n\t\t\t\t\t\t\t\tunits={this.props.units}\n\t\t\t\t\t\t\t\troles={this.props.roles}\n\t\t\t\t\t\t\t\tcellEditHandlers={[roleAndFuncEditHandler, this.changeDataToUpdate, timeRequiredHandler]}\n\t\t\t\t\t\t\t\tselectedRow={this.selectedRow}\n\t\t\t\t\t\t\t\tfilterRoleAndFuncDropdownByUnit={filterRoleAndFuncDropdownByUnit}\n\n\t\t\t\t\t\t\t\ttableName='Tasks'\n\t\t\t\t\t\t\t\taddRow={this.props.addRow}\n\t\t\t\t\t\t\t\tdeleteRow={this.props.deleteRow}\n\t\t\t\t\t\t\t\tupdateRows={this.props.updateRows}\n\t\t\t\t\t\t\t\tgetDataToUpdate={this.getDataToUpdate}\n\t\t\t\t\t\t\t\tcleanDataToUpdate={this.cleanDataToUpdate}\n\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</main>\n\t\t\t\t}\n\n\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}