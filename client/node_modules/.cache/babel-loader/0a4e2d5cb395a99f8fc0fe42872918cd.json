{"ast":null,"code":"import nameSpace from \"../name-space.js\";\nimport { getUser } from \"../user/selectors\";\nimport { createSelector } from \"reselect\";\nimport { format } from \"morgan\";\nconst NAME_SPACE = nameSpace.DATA;\n\nconst concatData = data => {\n  let result = [];\n  data.forEach(item => {\n    result = result.concat(item);\n  });\n  return result;\n};\n\nexport const getLoadingStatus = state => {\n  return state[NAME_SPACE].isLoading;\n};\nexport const getReviews = state => {\n  return concatData(state[NAME_SPACE].reviews);\n};\nexport const getOkrs = state => {\n  return concatData(state[NAME_SPACE].okrs);\n};\nexport const getTasks = state => {\n  return concatData(state[NAME_SPACE].tasks);\n};\nexport const getUnits = state => {\n  return concatData(state[NAME_SPACE].units);\n};\nexport const getFunctions = state => {\n  return concatData(state[NAME_SPACE].functions);\n};\nexport const getRoleUnit = state => {\n  return concatData(state[NAME_SPACE].roleUnit);\n};\nexport const getRoles = state => {\n  return concatData(state[NAME_SPACE].roles);\n};\n\nconst findLookUpArray = (arr, lookupValue, fieldName) => {\n  try {\n    if (lookupValue) {\n      const foundArray = arr.filter(func => {\n        for (let i = 0; i < lookupValue.length; i++) {\n          if (func.id === lookupValue[i]) {\n            return true;\n          }\n        }\n\n        return func.id === lookupValue[0];\n      });\n      return foundArray.map(item => item.fields[fieldName]);\n    }\n\n    return \"\";\n  } catch {\n    return \"\";\n  }\n};\n\nexport const getTasksOnRole = createSelector([getTasks, getRoleUnit, getUser], (tasks, roles, user) => {\n  const tasksOnRole = tasks.filter(task => {\n    const taskFields = task.fields;\n    const rolesList = findLookUpArray(roles, taskFields[\"Role\"], \"Role in Unit\");\n\n    if (user.role) {\n      return rolesList.includes(user.role);\n    }\n\n    return false;\n  }).map(item => item.fields['Task']).filter(value => !!value).filter((value, index, self) => self.indexOf(value) === index);\n  return tasksOnRole;\n});","map":{"version":3,"sources":["/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/reducer/data/selectors.js"],"names":["nameSpace","getUser","createSelector","format","NAME_SPACE","DATA","concatData","data","result","forEach","item","concat","getLoadingStatus","state","isLoading","getReviews","reviews","getOkrs","okrs","getTasks","tasks","getUnits","units","getFunctions","functions","getRoleUnit","roleUnit","getRoles","roles","findLookUpArray","arr","lookupValue","fieldName","foundArray","filter","func","i","length","id","map","fields","getTasksOnRole","user","tasksOnRole","task","taskFields","rolesList","role","includes","value","index","self","indexOf"],"mappings":"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","sourcesContent":["\nimport nameSpace from \"../name-space.js\";\nimport {getUser} from \"../user/selectors\";\nimport {createSelector} from \"reselect\";\nimport { format } from \"morgan\";\n\nconst NAME_SPACE = nameSpace.DATA;\n\nconst concatData = (data) => {\n    let result = [];\n    data.forEach((item) => {\n        result = result.concat(item);\n    });\n\n    return result;\n};\n\nexport const getLoadingStatus = (state) => {\n    return state[NAME_SPACE].isLoading;\n};\n\nexport const getReviews = (state) => {\n    return concatData(state[NAME_SPACE].reviews);\n};\n\nexport const getOkrs = (state) => {\n    return concatData(state[NAME_SPACE].okrs);\n};\n\nexport const getTasks = (state) => {\n    return concatData(state[NAME_SPACE].tasks);\n};\n\nexport const getUnits = (state) => {\n    return concatData(state[NAME_SPACE].units);\n};\n\nexport const getFunctions = (state) => {\n    return concatData(state[NAME_SPACE].functions);\n};\n\nexport const getRoleUnit = (state) => {\n    return concatData(state[NAME_SPACE].roleUnit);\n};\n\nexport const getRoles = (state) => {\n    return concatData(state[NAME_SPACE].roles);\n};\n\nconst findLookUpArray = (arr, lookupValue, fieldName) => {\n\ttry {\n\t\tif (lookupValue) {\n\t\t\tconst foundArray =  arr.filter((func) => {\n                for (let i = 0; i < lookupValue.length; i++) {\n                    if (func.id === lookupValue[i]) {\n                        return true\n                    }\n                }\n                return func.id === lookupValue[0];\n            });\n            return foundArray.map((item) => item.fields[fieldName]);\n\t\t}\n\t\treturn \"\";\n\t} catch {\n\t\treturn \"\";\n\t}\n};\n\nexport const getTasksOnRole = createSelector(\n    [getTasks, getRoleUnit, getUser],\n    (tasks, roles, user) => {\n       const tasksOnRole =  tasks.filter((task) => {\n        const taskFields = task.fields;\n        const rolesList = findLookUpArray(roles, taskFields[\"Role\"], \"Role in Unit\");\n        if (user.role) {\n            return rolesList.includes(user.role);\n        }\n        return false;\n        \n       })\n       .map((item) => item.fields['Task'])\n       .filter((value) => !!(value))\n       .filter((value, index, self) => self.indexOf(value) === index);\n       \n       return tasksOnRole;\n    }\n    \n);\n\n"]},"metadata":{},"sourceType":"module"}