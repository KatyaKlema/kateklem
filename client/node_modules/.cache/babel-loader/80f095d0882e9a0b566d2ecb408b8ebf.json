{"ast":null,"code":"export const extend = (a, b) => {\n  return Object.assign({}, a, b);\n};\nexport const getParams = (arr, field) => {\n  if (arr) {\n    return arr.map(row => {\n      if (row.fields[field]) {\n        return row.fields[field];\n      }\n    });\n  }\n};\nexport const findLookUpValue = (arr, lookupValue, fieldName) => {\n  try {\n    if (lookupValue) {\n      return arr.filter(func => {\n        return func.id === lookupValue[0];\n      })[0].fields[fieldName];\n    }\n\n    return \"\";\n  } catch {\n    return \"\";\n  }\n};\nexport const fieldAdapter = (targetField, fieldValue, table) => {\n  const index = table.findIndex(element => {\n    return element.fields[targetField] === fieldValue;\n  });\n\n  if (index === -1) {\n    return \"\";\n  }\n\n  return [table[index].id];\n};\nexport const checkIfEditableTable = (structure, user) => {\n  if (user.rights === \"Regular\") {\n    for (let key in structure) {\n      structure[key][\"editor\"] = false;\n    }\n  }\n\n  return structure;\n};\nexport const filterUnitData = (table, user) => {\n  if (user.rights === \"Regular\") {\n    return table.filter(item => item.unit === user.unit && item.role === user.role);\n  } else if (user.rights === \"Unit Lead\") {\n    return table.filter(item => item.unit === user.unit);\n  }\n\n  return table;\n};\nexport const filterDropdownMenus = (props, filterUnits, table, generateFiltersObject) => {\n  //console.log(generateFiltersObject());\n  //table.setFilter(generateFiltersObject());\n  const tab = window.location.pathname.split('/').slice(-1)[0];\n\n  if (tab === 'tasks') {\n    // Tasks table, Role and Function column dropdown filter\n    table.updateColumnDefinition('roleAndFunc', {\n      editorParams: {\n        values: props.filterRoleAndFuncDropdownByUnit(filterUnits, props.functions, props.units)\n      }\n    });\n  } else if (tab === 'functions') {\n    // Functions table, Role column dropdown filter\n    table.updateColumnDefinition('role', {\n      editorParams: {\n        values: props.filterRoleDropdownByUnit(filterUnits, props.roleUnit, props.roles, props.units)\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/ekaterina/Desktop/latoken/03.08.2020/operations-platform/client/src/utils.js"],"names":["extend","a","b","Object","assign","getParams","arr","field","map","row","fields","findLookUpValue","lookupValue","fieldName","filter","func","id","fieldAdapter","targetField","fieldValue","table","index","findIndex","element","checkIfEditableTable","structure","user","rights","key","filterUnitData","item","unit","role","filterDropdownMenus","props","filterUnits","generateFiltersObject","tab","window","location","pathname","split","slice","updateColumnDefinition","editorParams","values","filterRoleAndFuncDropdownByUnit","functions","units","filterRoleDropdownByUnit","roleUnit","roles"],"mappings":"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","sourcesContent":["export const extend = (a, b) => {\n\treturn Object.assign({}, a, b);\n};\n\nexport const getParams = (arr, field) => {\n\tif (arr) {\n\t\treturn arr.map((row) => {\n\t\t\tif (row.fields[field]) {\n\t\t\t\treturn row.fields[field];\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport const findLookUpValue = (arr, lookupValue, fieldName) => {\n\ttry {\n\t\tif (lookupValue) {\n\t\t\treturn arr.filter((func) => {\n\t\t\t\treturn func.id === lookupValue[0];\n\t\t\t})[0].fields[fieldName];\n\t\t}\n\t\treturn \"\";\n\t} catch {\n\t\treturn \"\";\n\t}\n};\n\n\nexport const fieldAdapter = (targetField, fieldValue, table) => {\n\tconst index = table.findIndex((element) => {\n\t\treturn element.fields[targetField] === fieldValue;\n\t});\n\tif (index === -1) {\n\t\treturn \"\";\n\t}\n\treturn [table[index].id];\n};\n\nexport const checkIfEditableTable = (structure, user) => {\n\tif (user.rights === \"Regular\") {\n\t\tfor (let key in structure) {\n\t\t\tstructure[key][\"editor\"] = false;\n\t\t}\n\t}\n\treturn structure;\n};\n\nexport const filterUnitData = (table, user) => {\n\tif (user.rights === \"Regular\") {\n\t\treturn table.filter((item) => item.unit === user.unit && item.role === user.role);\n\t} else if (user.rights === \"Unit Lead\") {\n\t\treturn table.filter((item) => item.unit === user.unit);\n\t}\n\treturn table;\n};\n\nexport const filterDropdownMenus = (props, filterUnits, table, generateFiltersObject) => {\n    //console.log(generateFiltersObject());\n\t//table.setFilter(generateFiltersObject());\n\tconst tab = window.location.pathname.split('/').slice(-1)[0]\n\n\tif (tab === 'tasks') {\n\t\t// Tasks table, Role and Function column dropdown filter\n\t\ttable.updateColumnDefinition('roleAndFunc', {\n\t\t\teditorParams: {\n\t\t\t\tvalues: props.filterRoleAndFuncDropdownByUnit(filterUnits, props.functions, props.units)\n\t\t\t}\n\t\t})\n\t}\n\telse if (tab === 'functions') {\n\t\t// Functions table, Role column dropdown filter\n\t\ttable.updateColumnDefinition('role', {\n\t\t\teditorParams: {\n\t\t\t\tvalues: props.filterRoleDropdownByUnit(filterUnits, props.roleUnit, props.roles, props.units)\n\t\t\t}\n\t\t})\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}